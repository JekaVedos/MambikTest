{"version":3,"sources":["Component/Profile/Profile.module.scss","Component/Profile/Posts/Posts.module.scss","Component/Profile/Posts/Post/Post.module.scss","Component/Profile/Posts/Post/Post.js","Component/Profile/Posts/Posts.js","Component/Profile/Posts/PostsContainer.js","Component/Profile/ProfileInfo/ProfileStatusWithHooks.js","Component/Profile/ProfileInfo/ProfileInfo.js","Component/Profile/Profile.js","Component/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","className","s","post","post_inner","post_logo","src","postLogo","alt","post_text","message","post_likes","post_likes_svg","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","post_likes_scorer","likes","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","posts_input_cont","Field","validate","required","name","component","Textarea","placeholder","posts_input","posts_input_cont_send","Posts","PostElem","profilePage","PostD","map","item","index","posts","posts_title","values","addPost","newPostText","connect","state","dispatch","type","newText","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","profile_status_changer","onChange","e","currentTarget","value","onBlur","autoFocus","onDoubleClick","profile_status","ProfileInfo","profile","Fetching","main_user","main_user_logo","photos","small","squishi","main_user_des","main_user_des_name","fullName","main_user_des_fulldes","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileStatusWithHooks","Profile","main","updateStatus","PostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","React","Component","compose","auth","id","isAuth","withRouter"],"mappings":"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","file":"static/js/3.0e07eca3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__2XpVl\",\"main_bgi\":\"Profile_main_bgi__3WHlR\",\"main_user\":\"Profile_main_user__3PBT7\",\"main_user_logo\":\"Profile_main_user_logo__3P-y0\",\"main_user_des\":\"Profile_main_user_des__2-1Pq\",\"profile_status_changer\":\"Profile_profile_status_changer__3mR7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__2zBwH\",\"posts_title\":\"Posts_posts_title__3KiyG\",\"posts_input_cont\":\"Posts_posts_input_cont__19NQ-\",\"posts_input_cont_send\":\"Posts_posts_input_cont_send__30iG-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3Rdp1\",\"post_inner\":\"Post_post_inner__2av4m\",\"post_logo\":\"Post_post_logo__3CVOZ\",\"post_text\":\"Post_post_text__2UlD6\",\"post_likes\":\"Post_post_likes__FyUOJ\",\"post_likes_svg\":\"Post_post_likes_svg__3GOH3\",\"post_likes_scorer\":\"Post_post_likes_scorer__2Oiy8\"};","import React from 'react';\nimport s from './Post.module.scss';\nimport postLogo from '../../../../img/squishi_big.jpg'\n\nfunction Post(props) {\n   return(\n      <div className={s.post}>\n         <div className={s.post_inner}>\n            <div className={s.post_logo}>\n               <img src={postLogo} alt=\"\"/>\n            </div>\n            <div className={s.post_text}>\n               {props.message}\n            </div>\n         </div>\n         <div className={s.post_likes}>\n            <div className={s.post_likes_svg}>\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-2 w-2\" fill=\"none\" viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\n                        d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"/>\n               </svg>\n            </div>\n            <div className={s.post_likes_scorer}>\n               <p>{props.likes}</p>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default Post;\n\n\n\n","import React from 'react';\nimport s from './Posts.module.scss';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst Posts = (props) => {\n   let PostElem = props.profilePage.PostD.map((item, index) => <Post message={item.message} likes={item.likes}\n                                                                          key={index}/>)\n   let onAddPost = (values) => {\n      props.addPost(values.newPostText);\n   }\n\n   return (\n      <div className={s.posts}>\n         <div className={s.posts_title}>\n            <h1>My posts:</h1>\n         </div>\n         <AddNewPostFormRedux onSubmit={onAddPost}/>\n         <div>{PostElem}</div>\n      </div>\n   )\n}\n\nconst maxLength10 = maxLengthCreator(15)\n\nlet AddNewPostForm = (props) => {\n   return (\n      <form onSubmit={props.handleSubmit} className={s.posts_input_cont}>\n         <Field validate={[required, maxLength10]} name='newPostText' component={Textarea} placeholder='your news...'\n                className={s.posts_input}/>\n         <div className={s.posts_input_cont_send}>\n            <button>\n               SEND\n            </button>\n         </div>\n      </form>\n   )\n}\n\nlet AddNewPostFormRedux = reduxForm({\n   form: 'ProfileAddNewPostForm'\n})(AddNewPostForm)\n\n\nexport default Posts;\n\n\n\n","import {addPost} from \"../../../Redux/profileReducer\";\nimport Posts from \"./Posts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n   return {\n      profilePage: state.profilePage\n   }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n   return {\n      addPost: (newPostText) => {\n         dispatch(addPost(newPostText))\n         dispatch({type: 'UPDATE-NEW-POST-TEXT', newText: ''})\n      }\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\n","import React, {useEffect, useState} from \"react\";\nimport s from './../Profile.module.scss';\n\nconst ProfileStatus = (props) => {\n\n   let [editMode, setEditMode] = useState(false)\n   let [status, setStatus] = useState(props.status)\n\n   useEffect( () => {\n      setStatus(props.status)\n   }, [props.status])\n\n   const activateEditMode = () => {\n      setEditMode(true)\n   }\n\n   const deactivateEditMode = () => {\n      setEditMode(false)\n   }\n\n   const onStatusChange = (e) => {\n      setStatus(e.currentTarget.value)\n   }\n\n   return (\n      <div>\n         {editMode\n               ? <div className={s.profile_status_changer}>\n                  <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\n               </div>\n               : <div onDoubleClick={activateEditMode} className={s.profile_status}>\n                  {status || 'change your status'}\n               </div>\n         }\n      </div>\n   )\n}\n\nexport default ProfileStatus;","import React from \"react\";\nimport s from \"../Profile.module.scss\";\nimport squishi from \"../../../img/squishi_big.jpg\";\nimport Fetching from \"../../common/Fetching/Fetching\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = (props) => {\n\n   if (props.profile === null) {\n      return <Fetching/>\n   }\n\n   return (\n      <div>\n         {/*<div className={s.main_bgi}>*/}\n         {/*   <img src={props.profile.photos.large === null*/}\n         {/*   ? mainBg*/}\n         {/*   : props.profile.photos.large} alt=\"\"/>*/}\n         {/*</div>*/}\n         <div className={s.main_user}>\n            <div className={s.main_user_logo}>\n               <img src={props.profile.photos.small === null\n               ? squishi\n               : props.profile.photos.small} alt=\"\"/>\n            </div>\n            <div className={s.main_user_des}>\n               <div className={s.main_user_des_name}>\n                  <h1>{props.profile.fullName}</h1>\n               </div>\n               <ul className={s.main_user_des_fulldes}>\n                  <li>\n                     {props.profile.aboutMe}\n                  </li>\n                  <li>\n                     {props.profile.lookingForAJob === true\n                        ? `searching a job: ${props.profile.lookingForAJobDescription}`\n                        : `i don't looking for a job`\n                     }\n                  </li>\n                  <li>\n                     <ProfileStatusWithHooks status={props.status}/>\n                  </li>\n                  {/*<li className={s.main_user_des_fulldes_birtd}>*/}\n                  {/*   <b>Birthday:</b> {props.profileInfo.BD}</li>*/}\n                  {/*<li className={s.main_user_des_fulldes_city}>*/}\n                  {/*   <b>City:</b> {props.profileInfo.city}</li>*/}\n                  {/*<li className={s.main_user_des_fulldes_education}>*/}\n                  {/*   <b>Education:</b> {props.profileInfo.education}</li>*/}\n                  {/*<li className={s.main_user_des_fulldes_portfolio_link}>*/}\n                  {/*   <b>Portfolio Link:</b> {props.profileInfo.PortfLink}</li>*/}\n               </ul>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Profile.module.scss';\nimport PostsContainer from \"./Posts/PostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n\n   return (\n      <main className={s.main}>\n         <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n         <PostsContainer/>\n      </main>\n   )\n}\n\nexport default Profile;\n\n\n\n","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/profileReducer\";\nimport {withRouter} from \"react-router\";\nimport {compose} from \"redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\n\nclass ProfileContainer extends React.Component {\n\n   componentDidMount() {\n      let userId = this.props.match.params.userId;\n      if (!userId) {\n         userId = this.props.authorizedUserId;\n      }\n      this.props.getUserProfile(userId)\n      this.props.getStatus(userId)\n   }\n\n   render() {\n\n      return (\n         <Profile {...this.props}\n                  profile={this.props.profile}\n                  status={this.props.status}\n                  updateStatus={this.props.updateStatus}/>\n      )\n\n   }\n}\n\nlet mapStateToProps = (state) => {\n   return {\n      profile: state.profilePage.profile,\n      status: state.profilePage.status,\n      authorizedUserId: state.auth.id,\n      isAuth: state.auth.isAuth\n   }\n};\n\nexport default compose(\n   connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n   withRouter,\n   // withAuthRedirect\n)(ProfileContainer)\n\n\n\n"],"sourceRoot":""}